/*----------------------------------------------------------------
 *  Author:        Ketan Nayak
 *  Written:       2/9/2015
 *
 *  Purpose:  Create a generic data type Deque
 *  Detail:  A double-ended queue or deque (pronounced "deck") is a generalization 
 *  of a stack and a queue that supports inserting and removing items from either 
 *  the front or the back of the data structure
 *  Implementation: Using linked list
 *  
 *  Assignment here: http://coursera.cs.princeton.edu/algs4/assignments/queues.html
 *  Check-list here: http://coursera.cs.princeton.edu/algs4/checklists/queues.html
 *----------------------------------------------------------------*/
public class Deque<Item> implements Iterable<Item> {
	
	public Deque(){
		
	}
	
	public boolean isEmpty(){
		return first.next==null;
	}

	public int size(){
		
	}
	
	public void addFirst(Item item){
		
	}
	
	public void addLast(Item item){
		
	}
	
	public Item removeFirst(){
		
	}
	
	public Item removeLast(){
		
	}
	
	public Iterator<Item> iterator(){
		
	}
	
	public static void main(String args[]){
		
	}
	
	
}
